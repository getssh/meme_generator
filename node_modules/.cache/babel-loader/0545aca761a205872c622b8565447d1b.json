{"ast":null,"code":"var _jsxFileName = \"/home/getssh/practice/react_learn/meme_generator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    memeImage: \"https://i.imgflip.com/30b1gx.jpg\"\n  });\n  const [memeImages, setMemeImages] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(data => setMemeImages(data.data.memes));\n  }, []);\n\n  function handelChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(preMemes => ({ ...preMemes,\n      [name]: value\n    }));\n  }\n\n  function getMemeImage(event) {\n    event.preventDefault();\n    const randNumber = Math.floor(Math.random() * memeImages.length);\n    const url = memeImages[randNumber].url;\n    setMeme(preMeme => ({ ...preMeme,\n      memeImage: url\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      className: \"meme__header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme__elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          value: meme.topText,\n          placeholder: \"Meme Top Text\",\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          value: meme.bottomText,\n          placeholder: \"Meme Bottom Text\",\n          onChange: handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getMemeImage,\n          children: \"Generate Random Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme__meme-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"meme__top-text\",\n          children: meme.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"meme__bottom-text\",\n          children: meme.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"meme__image\",\n        alt: \"\",\n        src: meme.memeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vy1kOKhRPjhHuXy01f9vm/yLMEY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","App","meme","setMeme","topText","bottomText","memeImage","memeImages","setMemeImages","fetch","then","response","json","data","memes","handelChange","event","name","value","target","preMemes","getMemeImage","preventDefault","randNumber","Math","floor","random","length","url","preMeme"],"sources":["/home/getssh/practice/react_learn/meme_generator/src/App.js"],"sourcesContent":["import {React, useState, useEffect} from 'react'\nimport Header from './Header';\nimport './App.css'\n\nfunction App() {\n\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    memeImage: \"https://i.imgflip.com/30b1gx.jpg\",\n  })\n\n  const [memeImages, setMemeImages] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(response => response.json())\n      .then(data => setMemeImages(data.data.memes))\n  }, [])\n\n  function handelChange(event) {\n    const {name, value} = event.target;\n\n    setMeme(preMemes => ({\n      ...preMemes,\n      [name] : value\n    }))\n  }\n\n  function getMemeImage(event) {\n    event.preventDefault()\n    const randNumber = Math.floor(Math.random() * memeImages.length);\n    const url = memeImages[randNumber].url;\n\n    setMeme(preMeme => ({\n      ...preMeme,\n      memeImage: url\n    }))\n  }\n\n  return (\n    <div className=\"meme\">\n      <Header className=\"meme__header\" />\n       <div className='meme__elements'> \n        <form className='meme__form'>\n          <input\n            type=\"text\"\n            name=\"topText\"\n            value={meme.topText}\n            placeholder=\"Meme Top Text\"\n            onChange={handelChange}\n          />\n          <input\n            type=\"text\"\n            name=\"bottomText\"\n            value={meme.bottomText}\n            placeholder=\"Meme Bottom Text\"\n            onChange={handelChange}\n          />\n\n          <button onClick={getMemeImage}>Generate Random Meme</button>\n        </form>\n\n        <div className='meme__meme-wrapper'>\n          <h3 className=\"meme__top-text\">{meme.topText}</h3>\n          <h3 className=\"meme__bottom-text\">{meme.bottomText}</h3>\n        </div>\n        <img className=\"meme__image\" alt=\"\" src={meme.memeImage} />\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;IAC/BM,OAAO,EAAE,EADsB;IAE/BC,UAAU,EAAE,EAFmB;IAG/BC,SAAS,EAAE;EAHoB,CAAD,CAAhC;EAMA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIL,aAAa,CAACK,IAAI,CAACA,IAAL,CAAUC,KAAX,CAF7B;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,KAAK,CAACG,MAA5B;IAEAhB,OAAO,CAACiB,QAAQ,KAAK,EACnB,GAAGA,QADgB;MAEnB,CAACH,IAAD,GAASC;IAFU,CAAL,CAAT,CAAP;EAID;;EAED,SAASG,YAAT,CAAsBL,KAAtB,EAA6B;IAC3BA,KAAK,CAACM,cAAN;IACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBnB,UAAU,CAACoB,MAAtC,CAAnB;IACA,MAAMC,GAAG,GAAGrB,UAAU,CAACgB,UAAD,CAAV,CAAuBK,GAAnC;IAEAzB,OAAO,CAAC0B,OAAO,KAAK,EAClB,GAAGA,OADe;MAElBvB,SAAS,EAAEsB;IAFO,CAAL,CAAR,CAAP;EAID;;EAED,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE,QAAC,MAAD;MAAQ,SAAS,EAAC;IAAlB;MAAA;MAAA;MAAA;IAAA,QADF,eAEG;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACC;QAAM,SAAS,EAAC,YAAhB;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,SAFP;UAGE,KAAK,EAAE1B,IAAI,CAACE,OAHd;UAIE,WAAW,EAAC,eAJd;UAKE,QAAQ,EAAEW;QALZ;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,YAFP;UAGE,KAAK,EAAEb,IAAI,CAACG,UAHd;UAIE,WAAW,EAAC,kBAJd;UAKE,QAAQ,EAAEU;QALZ;UAAA;UAAA;UAAA;QAAA,QARF,eAgBE;UAAQ,OAAO,EAAEM,YAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAoBC;QAAK,SAAS,EAAC,oBAAf;QAAA,wBACE;UAAI,SAAS,EAAC,gBAAd;UAAA,UAAgCnB,IAAI,CAACE;QAArC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,SAAS,EAAC,mBAAd;UAAA,UAAmCF,IAAI,CAACG;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QApBD,eAwBC;QAAK,SAAS,EAAC,aAAf;QAA6B,GAAG,EAAC,EAAjC;QAAoC,GAAG,EAAEH,IAAI,CAACI;MAA9C;QAAA;QAAA;QAAA;MAAA,QAxBD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GApEQL,G;;KAAAA,G;AAsET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}